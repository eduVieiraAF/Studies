

float sal, desp, diff;
System.out.print("Renda mensal: ");
Scanner salS = new Scanner(System.in);
sal = salS.nextFloat();
System.out.print("Despesa mensal: ");
Scanner despS = new Scanner(System.in);
desp = despS.nextFloat();

System.out.println(" ");
diff = (desp / sal) * 100;
System.out.println("Sua despesa corresponde à " + Math.round(diff) + "% do seu salário.");

if (diff <= 70) {
   System.out.println(" ");
   System.out.println("Você está no controle das suas finanças!");
   System.out.println("Você pode investir " + NumberFormat.getCurrencyInstance().format(sal-desp) +
   ", ou " + (100-diff) + "% todos os meses.");
   System.out.println("Click no link abaixo para aprender mais sobre onde investir seu dinheiro");
} else {
   System.out.println(" ");
   System.out.println("É recomendável uma redução em seu orçamento familiar.");
   System.out.println("Como referência, é bom separar pelo menos 20% ou " +
           NumberFormat.getCurrencyInstance().format((sal * 20) / 100) + " para uma reserva de emêrgencia.");
   System.out.println("Tenha, também, em mente que contas referentes à residência (aluguél, IPTU, condomínio, etc), " +
           "devem ser de 40% ou " + NumberFormat.getCurrencyInstance().format((sal*40)/100) + " do seu salário");

}

}

=======================================================================================================================

int TEMP;
System.out.print("What's the temperature like? ");
Scanner sTemperature = new Scanner(System.in);
TEMP = sTemperature.nextInt();
if (TEMP >= 25) {
   System.out.println("It's a very hot day.");
   System.out.println("Be sure to drink lots of water");
}
else if (TEMP >= 18 && TEMP < 25) {
   System.out.println("Pretty warm");

} else if (TEMP < 18) {
   System.out.println("Pretty chilly");

}

=======================================================================================================================



   boolean hasHighIncome = true;
   boolean hasGoodCredit = true;
   boolean hasCriminalRecord = true;
               //                      OR                   REVERSE VALUE
   boolean isEligible = (hasHighIncome || hasGoodCredit) && !hasCriminalRecord;




AVOIDING ELSE CLAUSES UNNECESSARILY

int income;
System.out.print("Type in your income: $");
Scanner sIncome = new Scanner(System.in);
income = sIncome.nextInt();
String className = "Economy class";
if (income > 100_000)
   className = "First class";
System.out.println(className);


OR


int income;
System.out.print("Type in your income: $");
Scanner sIncome = new Scanner(System.in);
income = sIncome.nextInt();
String className = income > 100_000 ? "First class" : "Economy class" ;
System.out.println(className);


=======================================================================================================================

String role;
System.out.print("Type in your role: ");
Scanner sRole = new Scanner(System.in);
role = sRole.next();

switch (role) {
   case "admin":
       System.out.println("You're an admin");
   break;
   case "moderator":
       System.out.println("You're a moderator");
   break;
   default:
       System.out.println("You're a guest");
}

=======================================================================================================================

System.out.print("Number: ");
Scanner sNumber = new Scanner(System.in);
int number = sNumber.nextInt();

if  (number % 5 ==0 && number % 3 ==0)
   System.out.println("FizzBuzz");
else if (number % 3 == 0)
   System.out.println("Buzz");
else if(number % 5 == 0)
   System.out.println("Fizz");
else
   System.out.println(number + " is neither a Fizz nor a Buzz");


OR

System.out.print("Number: ");
Scanner sNumber = new Scanner(System.in);
int number = sNumber.nextInt();

if (number % 5 == 0) {
   if (number % 3 == 0)
       System.out.println("FizzBuzz");
   else
       System.out.println("Fizz");
}
else if (number % 3 == 0)
   System.out.println("Buzz");
else
   System.out.println(number + " is neither a Fizz nor a Buzz");

=======================================================================================================================

String inPut = "";
Scanner inPutS = new Scanner(System.in);
while (true) {
   System.out.print("Magic word: ");
   inPut = inPutS.next().toLowerCase();
   if (inPut.equals("edu"))
       break;
   if (inPut.contains("fuck") || inPut.contains("shit"))
       System.out.println("WATCH YOUR LANGUAGE!");
   else
       System.out.println("nope");
}
System.out.println("You found the magic word");

=======================================================================================================================

String inPut = "";
Scanner inPutS = new Scanner(System.in);

do {
   System.out.println();
   System.out.print("Magic word: ");
   inPut = inPutS.next().toLowerCase();
   if (inPut.contains("fuck") || inPut.contains("shit"))
       System.out.println("WATCH YOUR LANGUAGE!");

   if (!inPut.equals("edu"))
       System.out.println("NOPE");
}
while (!inPut.equals("edu"));
System.out.println("You have found the magic word");
System.out.println("Goodbye");

=======================================================================================================================

Scanner princScan = new Scanner(System.in);
int princ;
Scanner intRateScan = new Scanner(System.in);
float intRate;
Scanner monthScan = new Scanner(System.in);
int month;

while (true)
{
   System.out.print("Principal ($1K - $1M): ");
   princ = princScan.nextInt();
   if (princ >= 1_000 && princ <= 1_000_000)
break;
   System.out.println("Enter a value between $1,000 and $1,000,000.");
}
while (true)
{
   System.out.print("Interest rate: ");
   intRate = intRateScan.nextFloat();
   if (intRate >= 1 && intRate <= 30)
       break;
   System.out.println("Enter a valid rate.");
}
while (true)
{
   System.out.print("Period (years): ");
   month = monthScan.nextInt();
   if (month >= 1 && month <= 30){
       break;}
   System.out.println("Not allowed. Loans are between 1-30 years.");
}

=======================================================================================================================

String name = JOptionPane.showInputDialog("Enter your name:");
JOptionPane.showMessageDialog(null, "Hi " + name.toUpperCase());
int age = Integer.parseInt(JOptionPane.showInputDialog("Enter your age"));
JOptionPane.showMessageDialog(null, "Your name is " + name.toUpperCase() +
       " and you're " + age + " y.o.");
if (age < 12)
   JOptionPane.showMessageDialog(null, "you're an INFANT");
if (age >= 12 && age <= 19)
   JOptionPane.showMessageDialog(null, "You're a teenager and you're a rebel.");
if (age > 20 && age <= 45)
   JOptionPane.showMessageDialog(null, "You're (or should be) a hard-working fully " +
           "developed adult.");
if (age > 45)
   JOptionPane.showMessageDialog(null, "GRUMPY OLD FART ALERT!");

=======================================================================================================================

Double x,y,z;
Scanner scn = new Scanner(System.in);
System.out.print("Enter side x: ");
x = scn.nextDouble();
System.out.print("Enter side y: ");
y = scn.nextDouble();
z = Math.sqrt((x*x)+(y*y));
System.out.println("Your hypotenuse is "+z);


=======================================================================================================================

double x,y,m;
Scanner z = new Scanner(System.in);
System.out.print("Enter 1st number: ");
x = z.nextDouble();
System.out.print("Enter 2nd number: ");
y = z.nextDouble();
m = Math.max(x,y);
System.out.println(m);

=======================================================================================================================

Random rand = new Random();
int x = rand.nextInt(6)+1;
System.out.println(x);


=======================================================================================================================

Scanner scanner = new Scanner(System.in);
String name = "";

do {
   System.out.print("Enter your name: ");
   name = scanner.nextLine();
}while (name.isBlank());
System.out.println("Hello " + name.toUpperCase());


=======================================================================================================================

Scanner scanner = new Scanner(System.in);
int rows, cols;
String symbol;
System.out.print("enter nows: ");
rows = scanner.nextInt();
System.out.print("enter columns : ");
cols = scanner.nextInt();
System.out.print("enter symbol: ");
symbol = scanner.next();

for(int i = 1; i<= rows; i++) {
    System.out.println();
        for (int j = 1; j<= cols; j++) {
            System.out.print(symbol);
        }
}

=======================================================================================================================

// arrays

String[] cars = new String[3];
cars[0] = "Camaro";
cars[1] = "Tesla";
cars[2] = "Mustang";

for (int i = 0; i< cars.length; i++){
       System.out.println(cars[i]);
   }

=======================================================================================================================

 String name = "Edu";

//boolean result = name.equalsIgnoreCase("edu");
//int result = name.length();
//char result = name.charAt(0);
//int result = name.indexOf("d");
//boolean result = name.isEmpty();

String result = name.replace('u', 'y');

System.out.println(result);

=======================================================================================================================

ArrayList<String> food = new ArrayList<String>();
Scanner scanner = new Scanner(System.in);
System.out.println("Type in 5 of your favourite foods:");
int j;
for (j=1; j<6; j++) {
   System.out.print(j+" ");
   food.add(scanner.next());
}

//food.set(0, "sushi");
//food.remove(2);
//food.clear();

System.out.println();
System.out.println("Your favourite foods are: ");
j=1;

for (int i = 0; i<food.size();i++,j++) {

   System.out.print( j + ". " + food.get(i).toUpperCase() + " ");
}

System.out.println("");
System.out.println("Would you like to replace any food?");
System.out.println("Type in the number or QUIT to exit");

=======================================================================================================================

import java.util.ArrayList;
import java.util.Scanner;

// Playing with Arraylist

public class Main {
    public static void main(String[] args) {

        ArrayList<String> food = new ArrayList<String>();
        Scanner scanner = new Scanner(System.in);
        System.out.println("Type in 5 of your favourite foods:");
        int j;
        for (j = 1; j < 6; j++) {
            System.out.print(j + " ");
            food.add(scanner.next());
        }

//food.set(0, "sushi");
//food.remove(2);
//food.clear();

        System.out.println();
        System.out.println("Your favourite foods are: ");
        j = 1;

        for (int i = 0; i < food.size(); i++, j++) {

            System.out.print(j + ". " + food.get(i).toUpperCase() + "    ");
        }

        System.out.println("");
        System.out.println("Would you like to replace any food?");
        System.out.println("Type in the number or 0 [zero] to exit");
        int quit;
       j=1;
        do {

            System.out.print("->");
            quit = scanner.nextInt();

            if (quit >= 1 || quit >= 5) {
                quit = quit-1;
                System.out.print("Enter your replacement: ");
                food.set(quit, scanner.next());
                System.out.println();
                j=1;
                for (int i = 0; i < food.size(); i++, j++) {
                    System.out.print(j + ". " + food.get(i).toUpperCase() + "    ");
                    System.out.println();
                }
                break;
            }
        } while (quit != 0);
        System.out.println("Goodbye");
        }

    }

=======================================================================================================================

ArrayList<ArrayList<String>> groceryList = new ArrayList<>();
        ArrayList<String> bakeryList = new ArrayList<>();
        bakeryList.add("pasta");
        bakeryList.add("doughnuts");
        bakeryList.add("garlic bread");


        ArrayList<String> produceList = new ArrayList<>();
        produceList.add("tomatoes");
        produceList.add("cucumbers");
        produceList.add("peppers");

        ArrayList<String> drinksList = new ArrayList<>();
        drinksList.add("soda");
        drinksList.add("beer");

        groceryList.add(bakeryList);
        groceryList.add(produceList);
        groceryList.add(drinksList);

       // System.out.println(groceryList); all lists
       // System.out.println(groceryList.get(1)); one list
       // System.out.println(groceryList.get(0).get(2)); on item from one of the lists


=======================================================================================================================

//for-each loop = traversing technique to iterate thru elements in arrays.
// less steps & more readable
// less flexible

// String[] animals =  {"cat", "dog", "lizard", "bird"};
ArrayList<String> animals = new ArrayList<String>();
animals.add("Cat");
animals.add("Dogo");
animals.add("Lizard");
animals.add("Birdie ");

for(String i:animals) {
   System.out.println(i);
}

=======================================================================================================================

// Method = a block of code that is executed whenever it is called upon

      int x = 3;
      int y = 4;
       System.out.println(add(x,y));
   }

static int add(int x, int y) {
       return x+y;
}

=======================================================================================================================

// overloaded methods = methods that share the same name but have different parameters
   //                      method name + parameters = method signature

   double x = add(1,2,4,8);
   System.out.println(x);

}
static int add(int a, int b){
   System.out.println("This is overloaded method #1");
   return a+b;
}
static int add(int a, int b, int c){
   System.out.println("This is overloaded method #2");
   return a+b+c;
}
static int add(int a, int b, int c, int d){
   System.out.println("This is overloaded method #3");
   return a+b+c+d;
}
static double add(double a, double b){
   System.out.println("This is overloaded method #4");
   return a+b;
}
static double add(double a, double b, double c){
   System.out.println("This is overloaded method #5");
   return a+b+c;
}
static double add(double a, double b, double c, double d){
   System.out.println("This is overloaded method #6");
   return a+b+c+d;
}

=======================================================================================================================

//printf() = optional method to control, format, and display texts to the console window with 2 args
//           format string + (objecct/variable/value)
//          % [flags] [precision] [width] [conversion character]


boolean myboo = true;
char myChar = '@';
String myString = "eduardo";
int myInt = 12;
double myDouble = -1000;

// [Conversion - character]

//System.out.printf("%b", myboo);
//System.out.printf("%c", myChar);
//System.out.printf("%s", myString.toUpperCase());
//System.out.printf("%d", myInt);
//System.out.printf("%f", myDouble);

// [Width]
// Minimum number of characters to be written as an output
//System.out.printf("Hello %10s", myString.toUpperCase());

// [Precision]
// Sets number of digits of precision when outputting floating point values
//System.out.printf("You have %.2f", myDouble);

// [Flags]
// Adds an effect to output based on the flag added to the format specifier
// - : left-justify
// + : output a plus (+) or minus (-) sign for a numeric value
// 0 : numeric values are zero-padded
// , : comma grouping separator if number > 1000
// System.out.printf("You have %,f", myDouble);


=======================================================================================================================

//SEPARATE JAVA CLASS EXAMPLE


public class Cars {

   String make = "Chevrolet";
   String model = "Tracker";
   int year = 2021;
   String color = "White";
   double price = 50_000.00;

   void drive() {
       System.out.println("you're driving it");
   }

   void breaks(){
       System.out.println("you're pulling over");
   }
}


----------------------------------------------------------------------


import java.text.Format;
import java.text.NumberFormat;

public class Main {
   public static void main(String[] args) {

       // Objects = an instance of a class that may contain attributes and methods such as a phone, desk, laptop, cup...
       // Separate java class was created "cars"

       Cars myCar = new Cars();
       System.out.println(myCar.color);
       System.out.println(myCar.make);
       System.out.println(myCar.model);
       System.out.println(myCar.year);
       System.out.println(NumberFormat.getCurrencyInstance().format(myCar.price));
       System.out.println();
       myCar.drive();
       myCar.breaks();
       }

   }

=======================================================================================================================

SEPARARE JAVA CLASS FILE CALLED 'HUMAM'

public class Human {

    String name;
    int age;
    double weight;
    double height;

    Human(String name, int age, double weight, double height){

        this.name = name;
        this.age = age;
        this.weight = weight;
        this.height = height;

    }

void eat(){
    System.out.println(this.name+" is eating.");
}

void drink(){
    System.out.println(this.name + "is drinking.");
}

-----------------------------------------------------------------------------------------------------------


public class Main {
    public static void main(String[] args) {

        // Constructor: Special method that is called when an object is intantiated (created)
        // separate java class file called Human

        Human human1 = new Human("Jeff", 42, 90, 1.70);
        Human human2 = new Human("Jerry", 34, 75.8, 1.80);
        Human human3 = new Human("Suellen", 27, 65, 1.52);
        Human human4 = new Human("Michelle", 19, 55, 1.60);

        System.out.println(human1.name);
        System.out.println(human3.height + "cm");
        System.out.println(human2.weight + "Kg");
        System.out.println(human4.age);
        human3.eat();
        human1.drink();

        }

    }

 ======================================================================================================================

  // SEPARATE JAVA CLASS FILE 'DiceRoller'

import java.util.Random;

public class DiceRoller {

    DiceRoller(){
        Random random = new Random();
        int number =0;
        roll(random,number);

    }

    void roll(Random random, int number){    //passing local variables 'random' and 'number as arguments to change_
        number = random.nextInt(6)+1;        //them into global variables
        System.out.println(number);
    }
}

-----------------------------------------------------------------------------------------------------------------------


public class Main {
    public static void main(String[] args) {

        DiceRoller diceroller = new DiceRoller();

        }

    }

======================================================================================================================

// overloaded constructor = multiple constructor within a class with the same name but have different parameters
// name + parameters = signature

SEPARATE JAVA CLASS FILE 'PIZZA'

public class Pizza {

    String bread;
    String sauce;
    String cheese;
    String topping;



    Pizza(String bread, String sauce){

        this.bread = bread;
        this.sauce = sauce;

    }

    Pizza(String bread, String sauce, String cheese){

        this.bread = bread;
        this.sauce = sauce;
        this.cheese = cheese;

    }

    Pizza(String bread, String sauce, String cheese, String topping){

        this.bread = bread;
        this.sauce = sauce;
        this.cheese = cheese;
        this.topping = topping;

    }

}

-----------------------------------------------------------------------------------------------------------------------


public class Main {

    public static void main(String[] args) {

        Pizza pizza = new Pizza("Thick bread", "tomato", "Jarlsberg", "Bacon and garlic");
        System.out.println("Here's how you like your pizza:");
        System.out.println(pizza.bread);
        System.out.println(pizza.sauce);
        System.out.println(pizza.cheese);
        System.out.println(pizza.topping);
        System.out.println();

        Pizza pizza2 = new Pizza("thin crust", "no sauce", "mozzarella");
        System.out.println("here's your second pizza:");
        System.out.println(pizza2.bread);
        System.out.println(pizza2.sauce);
        System.out.println(pizza2.cheese);

        }

    }

=======================================================================================================================

*SEPARATE JAVA CLASS FILE 'CARS'

 // overriding the toString() method

public class Cars {

    String make = "Chevrolet";
    String model = "Tracker";
    String colour = "White";
    int year = 2021;

    public String toString(){

        return  make + "\n" + model + "\n" + colour + "\n" + year;

    }

}

-----------------------------------------------------------------------------------------------------------------------

public class Main {

    public static void main(String[] args) {

        Cars car = new Cars();

        System.out.println(car.toString());

        //OR

        System.out.println(car); // both work

        }

    }

=======================================================================================================================

// SEPARATE JAVA FILE "FOOD"

public class Food {

    String name;
    Food(String name) {
        this.name = name;
    }
}


public class Main {

    public static void main(String[] args) {

        //Food[] refrigerator =  new Food[3];

        Food food1 = new Food("pizza");
        Food food2 = new Food("butter");
        Food food3 = new Food("lettuce");

        //refrigerator[0] = food1;
        //refrigerator[1] = food2;
        //refrigerator[2] = food3;

        // OR

        Food[] refrigerator  = {food1,food2,food2};

        System.out.println(refrigerator[0].name);
        System.out.println(refrigerator[1].name);
        System.out.println(refrigerator[2].name);

    }
}

=======================================================================================================================

// Passing objects as arguments

// SEPARATE JAVA CLASS FILE 'CARS'

public class Cars {

    String name;
    Cars(String name){
        this.name = name;
    }

}

-----------------------------------------------------------------------------------------------------------------------

//SEPARATE JAVA CLASS FILE 'GARAGE'

public class Garage {

    void park(Cars car){
        System.out.println("Your " + car.name + " is parked in the garage");
    }
}

-----------------------------------------------------------------------------------------------------------------------


import java.util.Scanner;

public class Main {

    public static void main(String[] args) {

        Garage garage = new Garage();
        System.out.println("What car do you own?");
        Scanner scanner = new Scanner(System.in);
        Cars car = new Cars(scanner.next());
        garage.park(car);
        System.out.println();
        System.out.println("Would you like to park a second car? " + "Enter the car name or 'QUIT'");
        car = new Cars(scanner.next().toUpperCase());
        if (car.name.contains("QUIT")) {
            System.out.println();
            System.out.println("Good bye");}
        else {
            System.out.println();
            garage.park(car);
        }
    }
}

=======================================================================================================================